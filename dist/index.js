const router=require("express").Router(),{Events,User}=require("../models"),withAuth=require("../utils/auth");router.get("/",async(a,b)=>{try{b.render("landingPage",{logged_in:a.session.logged_in})}catch(a){b.status(500).json(a)}}),router.get("/homepage",async(a,b)=>{try{const c=await Events.findAll({include:[{model:User,attributes:["username"]}]}),d=c.map(a=>a.get({plain:!0})),e=await User.findByPk(a.session.user_id);console.log("events",d),b.render("homepage",{events:d,logged_in:a.session.logged_in,username:e.username})}catch(a){b.status(500).json(a)}}),router.get("/events/:id",async(a,b)=>{try{const c=await Events.findByPk(a.params.id,{include:[{model:User,attributes:["name"]}]}),d=c.get({plain:!0});b.render("events",{...d,logged_in:a.session.logged_in})}catch(a){b.status(500).json(a)}}),router.get("/newevent",withAuth,async(a,b)=>{try{console.log("this route is hitting");const c=await User.findByPk(a.session.user_id,{attributes:{exclude:["password"]},include:[{model:Events}]});console.log("req.session.user_id",a.session.user_id);c.get({plain:!0});b.render("newevent",{logged_in:!0})}catch(a){b.status(500).json(a)}}),router.get("/login",(a,b)=>a.session.logged_in?void b.redirect("/homepage"):void b.render("login")),router.get("/signup",(a,b)=>a.session.logged_in?void b.redirect("/homepage"):void b.render("signup")),module.exports=router;